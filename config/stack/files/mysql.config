# MYSQL CONFIG

# This will be passed to all mysql clients
# It has been reported that passwords should be enclosed with ticks/quotes
# escpecially if they contain "#" chars...
# Remember to edit /etc/mysql/debian.cnf when changing the socket location.
[client]
port            = 3306
socket          = /var/run/mysqld/mysqld.sock
default-character-set=utf8

# Here is entries for some specific programs
# The following values assume you have at least 32M ram

# This was formally known as [safe_mysqld]. Both versions are currently parsed.
[mysqld_safe]
socket          = /var/run/mysqld/mysqld.sock
nice            = 0

[mysqld]
default-character-set=utf8
collation-server=utf8_general_ci
old_passwords = true # inserted by debconf
# Activate the above for connections from hosts running Debian Woody/Sarge!
#
# Prior to MySQL 5.0, user passwords were stored in a rather weak way. This
# has been improved with the drawback that client programs shipped with
# Debian Woody/Sarge (technically: linked against libmysqlclient.so.12 or
# earlier) cannot connect any more if either their account has either been
# created or their password has been modified using MySQL 5.0.
# See http://dev.mysql.com/doc/refman/5.0/en/old-client.html
#
# * Basic Settings
#
user            = mysql
pid-file        = /var/run/mysqld/mysqld.pid
socket          = /var/run/mysqld/mysqld.sock
port            = 3306
basedir         = /usr
datadir         = /var/lib/mysql
tmpdir          = /tmp
language        = /usr/share/mysql/english
skip-external-locking
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
bind-address = 127.0.0.1
max_connections = 100

# * Fine Tuning
# key_buffer = 32M
# max_allowed_packet = 16M
# thread_stack = 128K
# thread_cache_size = 8

# * Query Cache Configuration
query_cache_limit = 4M
query_cache_size  = 24M
query_cache_type  = 1

join_buffer_size = 4M
sort_buffer_size = 4M

# * Logging and Replication
#
# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
#log            = /var/log/mysql/mysql.log
#
# Error logging goes to syslog. This is a Debian improvement :)
#
# Here you can see queries with especially long duration
# log_slow_queries  = /var/log/mysql/mysql-slow.log
long_query_time = 2
log_error=/var/log/mysql/error.log
log_warnings = 2

#
# The following can be used as easy to replay backup logs or for replication.
#server-id              = 1
log_bin = /var/log/mysql/mysql-bin.log
# WARNING: Using expire_logs_days without bin_log crashes the server! See README.Debian!
expire_logs_days = 10
max_binlog_size = 100M

# * InnoDB
# Optimizations taken from http://www.mysqlperformanceblog.com/2007/11/01/innodb-performance-optimization-basics/

# Store 1 file per table, instead of giant tablespace
innodb_file_per_table
# Buffer pool - set to 70-80% of TOTAL MEMORY
innodb_buffer_pool_size = <%= (CONFIG[ENVIRONMENT][:db][:ram] * 0.7).to_i  %>M
innodb_additional_mem_pool_size = 20M
innodb_log_buffer_size = 8M
innodb_log_file_size = 256M
# Can dramatically speed up transactions but has the chance to possibly lose data
# in case of full OS crash
innodb_flush_log_at_trx_commit = 2
innodb_thread_concurrency = 8 
innodb_table_locks = 0
innodb_flush_method=O_DIRECT

[mysqldump]
quick
quote-names
max_allowed_packet = 16M

[mysql]
#no-auto-rehash # faster start of mysql but no tab completition

[isamchk]
key_buffer = 16M
